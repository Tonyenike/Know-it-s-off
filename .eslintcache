[{"/mnt/e/MyReact/new_frontend/src/components/default.js":"1","/mnt/e/MyReact/new_frontend/src/components/editDevice.js":"2","/mnt/e/MyReact/new_frontend/src/components/addDevice.js":"3","/mnt/e/MyReact/new_frontend/src/components/device.js":"4","/mnt/e/MyReact/new_frontend/src/components/home.js":"5","/mnt/e/MyReact/new_frontend/src/App.js":"6","/mnt/e/MyReact/new_frontend/src/components/grid/Grid.js":"7","/mnt/e/MyReact/new_frontend/src/components/grid/GridApp.js":"8","/mnt/e/MyReact/new_frontend/src/components/grid/GridContext.js":"9","/mnt/e/MyReact/new_frontend/src/components/login.js":"10","/mnt/e/MyReact/new_frontend/src/components/grid/DragItem.js":"11","/mnt/e/MyReact/new_frontend/src/components/signup.js":"12","/mnt/e/MyReact/new_frontend/src/components/tile.js":"13","/mnt/e/MyReact/new_frontend/src/components/editUser.js":"14"},{"size":202,"mtime":1610421851542,"results":"15","hashOfConfig":"16"},{"size":4482,"mtime":1611005663519,"results":"17","hashOfConfig":"16"},{"size":3156,"mtime":1610421851540,"results":"18","hashOfConfig":"16"},{"size":1336,"mtime":1611006671457,"results":"19","hashOfConfig":"16"},{"size":3300,"mtime":1611003982853,"results":"20","hashOfConfig":"16"},{"size":1603,"mtime":1610677032694,"results":"21","hashOfConfig":"16"},{"size":895,"mtime":1610677942310,"results":"22","hashOfConfig":"16"},{"size":746,"mtime":1611006437312,"results":"23","hashOfConfig":"16"},{"size":2495,"mtime":1610679251719,"results":"24","hashOfConfig":"16"},{"size":2510,"mtime":1610422122547,"results":"25","hashOfConfig":"16"},{"size":846,"mtime":1610421851548,"results":"26","hashOfConfig":"16"},{"size":2475,"mtime":1610423636974,"results":"27","hashOfConfig":"16"},{"size":3181,"mtime":1611006542313,"results":"28","hashOfConfig":"16"},{"size":5574,"mtime":1610421851545,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"13h61n6",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/e/MyReact/new_frontend/src/components/default.js",[],"/mnt/e/MyReact/new_frontend/src/components/editDevice.js",[],"/mnt/e/MyReact/new_frontend/src/components/addDevice.js",[],"/mnt/e/MyReact/new_frontend/src/components/device.js",[],"/mnt/e/MyReact/new_frontend/src/components/home.js",[],"/mnt/e/MyReact/new_frontend/src/App.js",[],"/mnt/e/MyReact/new_frontend/src/components/grid/Grid.js",[],"/mnt/e/MyReact/new_frontend/src/components/grid/GridApp.js",[],"/mnt/e/MyReact/new_frontend/src/components/grid/GridContext.js",["59","60"],"import React, { Component, createContext } from \"react\";\nimport Cookies from 'js-cookie';\n\nimport { GridContextProvider } from \"react-grid-dnd\";\n\n// Helper functions\n\nfunction move(array, oldIndex, newIndex) {\n  if (newIndex >= array.length) {\n    newIndex = array.length - 1;\n  }\n  array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n  return array;\n}\n\nfunction moveElement(array, index, offset) {\n  const newIndex = index + offset;\n\n  return move(array, index, newIndex);\n}\n\nfunction findIndexofItems(i, items_copy, cookie_items) {\n  return items_copy.findIndex(item => item.id === cookie_items[i].id) \n}\n\n// Context\n\nconst GridContext = createContext({ items: [] });\n\nexport class GridProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      moveItem: this.moveItem,\n      setItems: this.setItems\n    };\n  }\n\n  render() {\n    return (\n      <GridContext.Provider value={this.state}>\n        {this.props.children}\n      </GridContext.Provider>\n    );\n  }\n\n  setItems = items => {\n    if(!Cookies.get('idList') && items){\n      this.setState({items})\n    }\n    else{\n      var i, j\n      var items_copy = items.slice()\n      //retreive cookie\n      var cookie_idList = JSON.parse(Cookies.get('idList'));\n      var myArr = []\n      //reorder items based on cookie_idList\n      for(i in cookie_idList){\n         for(j in items_copy){\n            const itemID = items_copy[j].id\n            const cookieID = cookie_idList[i]\n            if(itemID === cookieID){\n               myArr.push(items_copy[j])\n               items_copy.splice(j,1)\n            }\n          }\n        }\n      }\n      for(i in items_copy){myArr.push(items_copy[i])}\n      if(myArr){\n         this.setState({items: myArr})\n      }\n  };\n\n  moveItem = (sourceId, destinationId) => {\n    const sourceIndex = this.state.items.findIndex(\n      item => item.id === sourceId\n    );\n    const destinationIndex = this.state.items.findIndex(\n      item => item.id === destinationId\n    );\n\n    // If source/destination is unknown, do nothing.\n    if (sourceId === -1 || destinationId === -1) {\n      return;\n    }\n\n    const offset = destinationIndex - sourceIndex;\n\n    this.setState(state => ({\n      items: moveElement(state.items, sourceIndex, offset)\n    }));\n\n    //store items in cookie\n    var i\n    var idList = []\n    for(i in this.state.items){\n       idList.push(this.state.items[i].id)\n    }\n    Cookies.set('idList', idList)\n  };\n}\n\nexport default GridContext;\n","/mnt/e/MyReact/new_frontend/src/components/login.js",[],"/mnt/e/MyReact/new_frontend/src/components/grid/DragItem.js",[],"/mnt/e/MyReact/new_frontend/src/components/signup.js",[],"/mnt/e/MyReact/new_frontend/src/components/tile.js",[],"/mnt/e/MyReact/new_frontend/src/components/editUser.js",[],{"ruleId":"61","severity":1,"message":"62","line":4,"column":10,"nodeType":"63","messageId":"64","endLine":4,"endColumn":29},{"ruleId":"61","severity":1,"message":"65","line":22,"column":10,"nodeType":"63","messageId":"64","endLine":22,"endColumn":26},"no-unused-vars","'GridContextProvider' is defined but never used.","Identifier","unusedVar","'findIndexofItems' is defined but never used."]